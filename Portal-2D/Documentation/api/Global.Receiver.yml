### YamlMime:ManagedReference
items:
- uid: Global.Receiver
  commentId: T:Global.Receiver
  id: Receiver
  parent: Global
  children:
  - Global.Receiver.activatedSprite
  - Global.Receiver.defaultSprite
  - Global.Receiver.isHitByLaser
  - Global.Receiver.isHitByMirror
  - Global.Receiver.isHitByPortal
  - Global.Receiver.isHitByTransmitter
  langs:
  - csharp
  - vb
  name: Receiver
  nameWithType: Receiver
  fullName: Receiver
  type: Class
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Receiver.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: Receiver
    path: ../Assets/Scripts/InteractiveObjects/Receiver.cs
    startLine: 8
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Class to control the laser receiver.
  example: []
  syntax:
    content: 'public class Receiver : MonoBehaviour'
    content.vb: Public Class Receiver Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
- uid: Global.Receiver.defaultSprite
  commentId: F:Global.Receiver.defaultSprite
  id: defaultSprite
  parent: Global.Receiver
  langs:
  - csharp
  - vb
  name: defaultSprite
  nameWithType: Receiver.defaultSprite
  fullName: Receiver.defaultSprite
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Receiver.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: defaultSprite
    path: ../Assets/Scripts/InteractiveObjects/Receiver.cs
    startLine: 25
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Default sprite - for when the receiver is not active
  example: []
  syntax:
    content: public Sprite defaultSprite
    return:
      type: UnityEngine.Sprite
    content.vb: Public defaultSprite As Sprite
- uid: Global.Receiver.activatedSprite
  commentId: F:Global.Receiver.activatedSprite
  id: activatedSprite
  parent: Global.Receiver
  langs:
  - csharp
  - vb
  name: activatedSprite
  nameWithType: Receiver.activatedSprite
  fullName: Receiver.activatedSprite
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Receiver.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: activatedSprite
    path: ../Assets/Scripts/InteractiveObjects/Receiver.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Activated sprite - for when the receiver is hit by the laser
  example: []
  syntax:
    content: public Sprite activatedSprite
    return:
      type: UnityEngine.Sprite
    content.vb: Public activatedSprite As Sprite
- uid: Global.Receiver.isHitByLaser
  commentId: F:Global.Receiver.isHitByLaser
  id: isHitByLaser
  parent: Global.Receiver
  langs:
  - csharp
  - vb
  name: isHitByLaser
  nameWithType: Receiver.isHitByLaser
  fullName: Receiver.isHitByLaser
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Receiver.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: isHitByLaser
    path: ../Assets/Scripts/InteractiveObjects/Receiver.cs
    startLine: 33
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: True if the receiver was hit from any source
  example: []
  syntax:
    content: public bool isHitByLaser
    return:
      type: System.Boolean
    content.vb: Public isHitByLaser As Boolean
- uid: Global.Receiver.isHitByTransmitter
  commentId: F:Global.Receiver.isHitByTransmitter
  id: isHitByTransmitter
  parent: Global.Receiver
  langs:
  - csharp
  - vb
  name: isHitByTransmitter
  nameWithType: Receiver.isHitByTransmitter
  fullName: Receiver.isHitByTransmitter
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Receiver.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: isHitByTransmitter
    path: ../Assets/Scripts/InteractiveObjects/Receiver.cs
    startLine: 37
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: True if the receiver was hit directly from the transmitter
  example: []
  syntax:
    content: public bool isHitByTransmitter
    return:
      type: System.Boolean
    content.vb: Public isHitByTransmitter As Boolean
- uid: Global.Receiver.isHitByMirror
  commentId: F:Global.Receiver.isHitByMirror
  id: isHitByMirror
  parent: Global.Receiver
  langs:
  - csharp
  - vb
  name: isHitByMirror
  nameWithType: Receiver.isHitByMirror
  fullName: Receiver.isHitByMirror
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Receiver.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: isHitByMirror
    path: ../Assets/Scripts/InteractiveObjects/Receiver.cs
    startLine: 41
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: True if the receiver was hit from the mirror cube
  example: []
  syntax:
    content: public bool isHitByMirror
    return:
      type: System.Boolean
    content.vb: Public isHitByMirror As Boolean
- uid: Global.Receiver.isHitByPortal
  commentId: F:Global.Receiver.isHitByPortal
  id: isHitByPortal
  parent: Global.Receiver
  langs:
  - csharp
  - vb
  name: isHitByPortal
  nameWithType: Receiver.isHitByPortal
  fullName: Receiver.isHitByPortal
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Receiver.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: isHitByPortal
    path: ../Assets/Scripts/InteractiveObjects/Receiver.cs
    startLine: 45
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: True if the receiver was hit from a portal
  example: []
  syntax:
    content: public bool isHitByPortal
    return:
      type: System.Boolean
    content.vb: Public isHitByPortal As Boolean
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
