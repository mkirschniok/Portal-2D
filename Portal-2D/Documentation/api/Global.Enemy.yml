### YamlMime:ManagedReference
items:
- uid: Global.Enemy
  commentId: T:Global.Enemy
  id: Enemy
  parent: Global
  children:
  - Global.Enemy.Start
  - Global.Enemy.Update
  - Global.Enemy.activeSprite
  - Global.Enemy.agonyTime
  - Global.Enemy.attackSprite
  - Global.Enemy.audioSource
  - Global.Enemy.detected
  - Global.Enemy.disabled
  - Global.Enemy.inactiveSprite
  - Global.Enemy.layerMask
  - Global.Enemy.shoot
  - Global.Enemy.userMass
  - Global.Enemy.wasPlayerDetected
  langs:
  - csharp
  - vb
  name: Enemy
  nameWithType: Enemy
  fullName: Enemy
  type: Class
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: Enemy
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 9
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    Class representing an enemy - turret. It handles updating its sprites based on its state (alive/dead),

    tracks the player to kill, and allows the user to eliminate it from the scene.
  example: []
  syntax:
    content: 'public class Enemy : PickableObject, IPortalEventsListener'
    content.vb: Public Class Enemy Inherits PickableObject Implements IPortalEventsListener
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - Global.PickableObject
  implements:
  - Global.IPortalEventsListener
  inheritedMembers:
  - Global.PickableObject.hittingTheGroundSound
  - Global.PickableObject.detectionRadius
  - Global.PickableObject.taken
  - Global.PickableObject.rigidbody2D
  - Global.PickableObject.Take(UnityEngine.Transform)
  - Global.PickableObject.Drop
  - Global.PickableObject.OnCollisionEnter2D(UnityEngine.Collision2D)
  - Global.PickableObject.OnTeleported(PortalLogic,PortalLogic)
  - Global.PickableObject.OnExitedPortalArea(PortalLogic)
- uid: Global.Enemy.activeSprite
  commentId: F:Global.Enemy.activeSprite
  id: activeSprite
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: activeSprite
  nameWithType: Enemy.activeSprite
  fullName: Enemy.activeSprite
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: activeSprite
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 14
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Sprite to display when the turret is alive.
  example: []
  syntax:
    content: public Sprite activeSprite
    return:
      type: UnityEngine.Sprite
    content.vb: Public activeSprite As Sprite
- uid: Global.Enemy.inactiveSprite
  commentId: F:Global.Enemy.inactiveSprite
  id: inactiveSprite
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: inactiveSprite
  nameWithType: Enemy.inactiveSprite
  fullName: Enemy.inactiveSprite
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: inactiveSprite
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 19
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Sprite to display when the turret is dead.
  example: []
  syntax:
    content: public Sprite inactiveSprite
    return:
      type: UnityEngine.Sprite
    content.vb: Public inactiveSprite As Sprite
- uid: Global.Enemy.attackSprite
  commentId: F:Global.Enemy.attackSprite
  id: attackSprite
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: attackSprite
  nameWithType: Enemy.attackSprite
  fullName: Enemy.attackSprite
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: attackSprite
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 24
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Sprite to display when the turret is attacking.
  example: []
  syntax:
    content: public Sprite attackSprite
    return:
      type: UnityEngine.Sprite
    content.vb: Public attackSprite As Sprite
- uid: Global.Enemy.layerMask
  commentId: F:Global.Enemy.layerMask
  id: layerMask
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: layerMask
  nameWithType: Enemy.layerMask
  fullName: Enemy.layerMask
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: layerMask
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 29
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Layer mask for collision detection.
  example: []
  syntax:
    content: public LayerMask layerMask
    return:
      type: UnityEngine.LayerMask
    content.vb: Public layerMask As LayerMask
- uid: Global.Enemy.userMass
  commentId: F:Global.Enemy.userMass
  id: userMass
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: userMass
  nameWithType: Enemy.userMass
  fullName: Enemy.userMass
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: userMass
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 34
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Mass of the turret for physics calculations.
  example: []
  syntax:
    content: public float userMass
    return:
      type: System.Single
    content.vb: Public userMass As Single
- uid: Global.Enemy.agonyTime
  commentId: F:Global.Enemy.agonyTime
  id: agonyTime
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: agonyTime
  nameWithType: Enemy.agonyTime
  fullName: Enemy.agonyTime
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: agonyTime
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 39
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Time in seconds before the turret is considered dead after being disabled.
  example: []
  syntax:
    content: public float agonyTime
    return:
      type: System.Single
    content.vb: Public agonyTime As Single
- uid: Global.Enemy.audioSource
  commentId: F:Global.Enemy.audioSource
  id: audioSource
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: audioSource
  nameWithType: Enemy.audioSource
  fullName: Enemy.audioSource
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: audioSource
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 44
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: AudioSource component for playing sounds.
  example: []
  syntax:
    content: public AudioSource audioSource
    return:
      type: UnityEngine.AudioSource
    content.vb: Public audioSource As AudioSource
- uid: Global.Enemy.detected
  commentId: F:Global.Enemy.detected
  id: detected
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: detected
  nameWithType: Enemy.detected
  fullName: Enemy.detected
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: detected
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 49
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Sound clip to play when the turret is detected.
  example: []
  syntax:
    content: public AudioClip detected
    return:
      type: UnityEngine.AudioClip
    content.vb: Public detected As AudioClip
- uid: Global.Enemy.disabled
  commentId: F:Global.Enemy.disabled
  id: disabled
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: disabled
  nameWithType: Enemy.disabled
  fullName: Enemy.disabled
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: disabled
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 54
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Sound clip to play when the turret is disabled.
  example: []
  syntax:
    content: public AudioClip disabled
    return:
      type: UnityEngine.AudioClip
    content.vb: Public disabled As AudioClip
- uid: Global.Enemy.shoot
  commentId: F:Global.Enemy.shoot
  id: shoot
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: shoot
  nameWithType: Enemy.shoot
  fullName: Enemy.shoot
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: shoot
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 59
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Sound clip to play when the turret is shooting;
  example: []
  syntax:
    content: public AudioClip shoot
    return:
      type: UnityEngine.AudioClip
    content.vb: Public shoot As AudioClip
- uid: Global.Enemy.wasPlayerDetected
  commentId: F:Global.Enemy.wasPlayerDetected
  id: wasPlayerDetected
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: wasPlayerDetected
  nameWithType: Enemy.wasPlayerDetected
  fullName: Enemy.wasPlayerDetected
  type: Field
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: wasPlayerDetected
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 64
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: True if the player was previously detected by the turret.
  example: []
  syntax:
    content: public bool wasPlayerDetected
    return:
      type: System.Boolean
    content.vb: Public wasPlayerDetected As Boolean
- uid: Global.Enemy.Start
  commentId: M:Global.Enemy.Start
  id: Start
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Enemy.Start()
  fullName: Enemy.Start()
  type: Method
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: Start
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 113
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Start is called before the first frame update
  example: []
  syntax:
    content: protected override void Start()
    content.vb: Protected Overrides Sub Start()
  overridden: Global.PickableObject.Start
  overload: Global.Enemy.Start*
- uid: Global.Enemy.Update
  commentId: M:Global.Enemy.Update
  id: Update
  parent: Global.Enemy
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Enemy.Update()
  fullName: Enemy.Update()
  type: Method
  source:
    remote:
      path: Portal-2D/Assets/Scripts/InteractiveObjects/Enemy.cs
      branch: main
      repo: https://github.com/mkirschniok/Portal-2D.git
    id: Update
    path: ../Assets/Scripts/InteractiveObjects/Enemy.cs
    startLine: 126
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: Update is called once per frame
  example: []
  syntax:
    content: protected override void Update()
    content.vb: Protected Overrides Sub Update()
  overridden: Global.PickableObject.Update
  overload: Global.Enemy.Update*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: Global.PickableObject
  commentId: T:Global.PickableObject
  href: PickableObject.html
  name: PickableObject
  nameWithType: PickableObject
  fullName: PickableObject
- uid: Global.IPortalEventsListener
  commentId: T:Global.IPortalEventsListener
  href: IPortalEventsListener.html
  name: IPortalEventsListener
  nameWithType: IPortalEventsListener
  fullName: IPortalEventsListener
- uid: Global.PickableObject.hittingTheGroundSound
  commentId: F:Global.PickableObject.hittingTheGroundSound
  parent: Global.PickableObject
  href: Global.PickableObject.html#PickableObject.hittingTheGroundSound
  name: hittingTheGroundSound
  nameWithType: PickableObject.hittingTheGroundSound
  fullName: PickableObject.hittingTheGroundSound
- uid: Global.PickableObject.detectionRadius
  commentId: F:Global.PickableObject.detectionRadius
  parent: Global.PickableObject
  href: Global.PickableObject.html#PickableObject.detectionRadius
  name: detectionRadius
  nameWithType: PickableObject.detectionRadius
  fullName: PickableObject.detectionRadius
- uid: Global.PickableObject.taken
  commentId: F:Global.PickableObject.taken
  parent: Global.PickableObject
  href: Global.PickableObject.html#PickableObject.taken
  name: taken
  nameWithType: PickableObject.taken
  fullName: PickableObject.taken
- uid: Global.PickableObject.rigidbody2D
  commentId: F:Global.PickableObject.rigidbody2D
  parent: Global.PickableObject
  href: Global.PickableObject.html#PickableObject.rigidbody2D
  name: rigidbody2D
  nameWithType: PickableObject.rigidbody2D
  fullName: PickableObject.rigidbody2D
- uid: Global.PickableObject.Take(UnityEngine.Transform)
  commentId: M:Global.PickableObject.Take(UnityEngine.Transform)
  parent: Global.PickableObject
  isExternal: true
  href: Global.PickableObject.html#PickableObject.Take(UnityEngine.Transform)
  name: Take(Transform)
  nameWithType: PickableObject.Take(Transform)
  fullName: PickableObject.Take(UnityEngine.Transform)
  spec.csharp:
  - uid: Global.PickableObject.Take(UnityEngine.Transform)
    name: Take
    href: Global.PickableObject.html#PickableObject.Take(UnityEngine.Transform)
  - name: (
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.PickableObject.Take(UnityEngine.Transform)
    name: Take
    href: Global.PickableObject.html#PickableObject.Take(UnityEngine.Transform)
  - name: (
  - uid: UnityEngine.Transform
    name: Transform
    isExternal: true
  - name: )
- uid: Global.PickableObject.Drop
  commentId: M:Global.PickableObject.Drop
  parent: Global.PickableObject
  href: Global.PickableObject.html#PickableObject.Drop
  name: Drop()
  nameWithType: PickableObject.Drop()
  fullName: PickableObject.Drop()
  spec.csharp:
  - uid: Global.PickableObject.Drop
    name: Drop
    href: Global.PickableObject.html#PickableObject.Drop
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PickableObject.Drop
    name: Drop
    href: Global.PickableObject.html#PickableObject.Drop
  - name: (
  - name: )
- uid: Global.PickableObject.OnCollisionEnter2D(UnityEngine.Collision2D)
  commentId: M:Global.PickableObject.OnCollisionEnter2D(UnityEngine.Collision2D)
  parent: Global.PickableObject
  isExternal: true
  href: Global.PickableObject.html#PickableObject.OnCollisionEnter2D(UnityEngine.Collision2D)
  name: OnCollisionEnter2D(Collision2D)
  nameWithType: PickableObject.OnCollisionEnter2D(Collision2D)
  fullName: PickableObject.OnCollisionEnter2D(UnityEngine.Collision2D)
  spec.csharp:
  - uid: Global.PickableObject.OnCollisionEnter2D(UnityEngine.Collision2D)
    name: OnCollisionEnter2D
    href: Global.PickableObject.html#PickableObject.OnCollisionEnter2D(UnityEngine.Collision2D)
  - name: (
  - uid: UnityEngine.Collision2D
    name: Collision2D
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.PickableObject.OnCollisionEnter2D(UnityEngine.Collision2D)
    name: OnCollisionEnter2D
    href: Global.PickableObject.html#PickableObject.OnCollisionEnter2D(UnityEngine.Collision2D)
  - name: (
  - uid: UnityEngine.Collision2D
    name: Collision2D
    isExternal: true
  - name: )
- uid: Global.PickableObject.OnTeleported(PortalLogic,PortalLogic)
  commentId: M:Global.PickableObject.OnTeleported(PortalLogic,PortalLogic)
  parent: Global.PickableObject
  href: Global.PickableObject.html#PickableObject.OnTeleported(PortalLogic,PortalLogic)
  name: OnTeleported(PortalLogic, PortalLogic)
  nameWithType: PickableObject.OnTeleported(PortalLogic, PortalLogic)
  fullName: PickableObject.OnTeleported(PortalLogic, PortalLogic)
  spec.csharp:
  - uid: Global.PickableObject.OnTeleported(PortalLogic,PortalLogic)
    name: OnTeleported
    href: Global.PickableObject.html#PickableObject.OnTeleported(PortalLogic,PortalLogic)
  - name: (
  - uid: Global.PortalLogic
    name: PortalLogic
    href: PortalLogic.html
  - name: ','
  - name: " "
  - uid: Global.PortalLogic
    name: PortalLogic
    href: PortalLogic.html
  - name: )
  spec.vb:
  - uid: Global.PickableObject.OnTeleported(PortalLogic,PortalLogic)
    name: OnTeleported
    href: Global.PickableObject.html#PickableObject.OnTeleported(PortalLogic,PortalLogic)
  - name: (
  - uid: Global.PortalLogic
    name: PortalLogic
    href: PortalLogic.html
  - name: ','
  - name: " "
  - uid: Global.PortalLogic
    name: PortalLogic
    href: PortalLogic.html
  - name: )
- uid: Global.PickableObject.OnExitedPortalArea(PortalLogic)
  commentId: M:Global.PickableObject.OnExitedPortalArea(PortalLogic)
  parent: Global.PickableObject
  href: Global.PickableObject.html#PickableObject.OnExitedPortalArea(PortalLogic)
  name: OnExitedPortalArea(PortalLogic)
  nameWithType: PickableObject.OnExitedPortalArea(PortalLogic)
  fullName: PickableObject.OnExitedPortalArea(PortalLogic)
  spec.csharp:
  - uid: Global.PickableObject.OnExitedPortalArea(PortalLogic)
    name: OnExitedPortalArea
    href: Global.PickableObject.html#PickableObject.OnExitedPortalArea(PortalLogic)
  - name: (
  - uid: Global.PortalLogic
    name: PortalLogic
    href: PortalLogic.html
  - name: )
  spec.vb:
  - uid: Global.PickableObject.OnExitedPortalArea(PortalLogic)
    name: OnExitedPortalArea
    href: Global.PickableObject.html#PickableObject.OnExitedPortalArea(PortalLogic)
  - name: (
  - uid: Global.PortalLogic
    name: PortalLogic
    href: PortalLogic.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: UnityEngine.LayerMask
  commentId: T:UnityEngine.LayerMask
  parent: UnityEngine
  isExternal: true
  name: LayerMask
  nameWithType: LayerMask
  fullName: UnityEngine.LayerMask
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.AudioSource
  commentId: T:UnityEngine.AudioSource
  parent: UnityEngine
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: UnityEngine.AudioSource
- uid: UnityEngine.AudioClip
  commentId: T:UnityEngine.AudioClip
  parent: UnityEngine
  isExternal: true
  name: AudioClip
  nameWithType: AudioClip
  fullName: UnityEngine.AudioClip
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.PickableObject.Start
  commentId: M:Global.PickableObject.Start
  parent: Global.PickableObject
  href: Global.PickableObject.html#PickableObject.Start
  name: Start()
  nameWithType: PickableObject.Start()
  fullName: PickableObject.Start()
  spec.csharp:
  - uid: Global.PickableObject.Start
    name: Start
    href: Global.PickableObject.html#PickableObject.Start
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PickableObject.Start
    name: Start
    href: Global.PickableObject.html#PickableObject.Start
  - name: (
  - name: )
- uid: Global.Enemy.Start*
  commentId: Overload:Global.Enemy.Start
  href: Global.Enemy.html#Enemy.Start
  name: Start
  nameWithType: Enemy.Start
  fullName: Enemy.Start
- uid: Global.PickableObject.Update
  commentId: M:Global.PickableObject.Update
  parent: Global.PickableObject
  href: Global.PickableObject.html#PickableObject.Update
  name: Update()
  nameWithType: PickableObject.Update()
  fullName: PickableObject.Update()
  spec.csharp:
  - uid: Global.PickableObject.Update
    name: Update
    href: Global.PickableObject.html#PickableObject.Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PickableObject.Update
    name: Update
    href: Global.PickableObject.html#PickableObject.Update
  - name: (
  - name: )
- uid: Global.Enemy.Update*
  commentId: Overload:Global.Enemy.Update
  href: Global.Enemy.html#Enemy.Update
  name: Update
  nameWithType: Enemy.Update
  fullName: Enemy.Update
